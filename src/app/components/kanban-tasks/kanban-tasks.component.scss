@use '../../../styles/global-mixins' as global;
@use '../../../styles/kanban-mixins' as kanban;
@import "styles.scss";

.scroll-container {
    height: calc(100vh - var(--size-nav-bar-height));
    overflow: hidden;
    
    .columns-container {
        @include global.flexboxLayout(row, flex-start, flex-start);
        height: 100%;
        margin: 0 24px;
        overflow-x: auto;

        .column-container {
            @include global.flexboxLayout(column, stretch, flex-start);
            margin: 4px 12px;
            height: calc(100vh - calc(var(--size-nav-bar-height) + 64px));
            min-width: 250px;
            overflow-x: hidden;
            overflow-y: auto;
            padding: 0 4px;
            
            .column-header {
                @include global.flexboxLayout(row, flex-start, center);
                margin: 24px 0;

                .color-circle {
                    border-radius: 100%;
                    height: 12px;
                    margin-right: 12px;
                    width: 12px;
                }

                .column-header-text {
                    // @include kanban.darkHeadingSText;
                    @include kanban.headingSText;
                    // color: var(--light-subtitle-text-1);
                    color: var(--subtitle-text-1);
                    margin: 0;
                    text-transform: uppercase;
                }
            }
        }

        .new-column-area {
            @include global.flexboxLayout(row, center, center);
            background: linear-gradient(180deg, rgba(43, 44, 55, 0.25) 0%, rgba(43, 44, 55, 0.125) 100%);
            border-radius: 6px;
            height: 80vh;
            margin-top: 64px;
            width: 100%;

            .new-column-button {
                // @include kanban.darkHeadingXLText;
                // color: var(--light-subtitle-text-1);
                @include kanban.headingXLText;
                color: var(--subtitle-text-1);
                text-transform: capitalize;
                white-space: normal;
            }
            
            mat-icon {
                // color: var(--light-subtitle-text-1);
                color: var(--subtitle-text-1);
                margin-right: 8px;
            }
        }
    }
}

.task-card {
    @include kanban.taskCardStyles;
}

.no-tasks-container {
    @include global.flexboxLayout(column, center, center);
    height: 100%;
    height: calc(100% - var(--size-nav-bar-height));

    .empty-board {
        // @include kanban.darkHeadingLText;
        // color: var(--light-subtitle-text-1);
        @include kanban.headingLText;
        color: var(--subtitle-text-1);
    }

    .add-column-button {
        @include kanban.mainButtonStyles;
        @include kanban.darkHeadingMText;

        &:hover {

        }
    }

}

// This is the element being dragged
.cdk-drag {
    
    mat-icon {
        cursor: move;
    }

    &-content {
        @include global.flexboxLayout(column, flex-start, flex-start);
    }
    
    .element-title {
        @include kanban.darkBodyMText;
    }

    p {
        margin: 0;
        padding: 0;
    }
}

// This is the preview of the element being dragged
.cdk-drag-preview {
    @include global.flexboxLayout(row, flex-start, flex-start);
    // color: var(--ang-exp-white-1);
    // background-color: var(--ang-exp-grey-4);
    color: var(--title-text-1);
    background-color: var(--drag-preview-background-color);
    width: 100%;
    min-height: 60px;
    margin: 4px 0;
    box-sizing: border-box;
    border-radius: 4px;
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
                0 8px 10px 1px rgba(0, 0, 0, 0.14),
                0 3px 14px 2px rgba(0, 0, 0, 0.12);

    .element-title {
        @include kanban.darkBodyMText;
    }

    p {
        margin: 0;
        padding: 0;
    }
}

// This affects the preview after releasing the mouse button to allow the drop
.cdk-drag-animating {
    // background-color: red;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// These are all the elements not being dragged
.cdk-drop-list-dragging .cdk-drag:not(.cdk-drag-placeholder) {
    // background-color: blue;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// This affects the location the element was dragged from, after the element is 
// clicked on and the drag is in progress
.placeholder {
    // background-color: var(--ang-exp-grey-4);
    // border: dotted 2px var(--light-subtitle-text-2);
    background-color: var(--drag-preview-placeholder-color);
    border: dotted 2px var(--drag-preview-outline-color);
    margin: 4px 0;
    min-height: 60px;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
    width: 98%;
}