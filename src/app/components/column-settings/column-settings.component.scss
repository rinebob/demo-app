@import "styles.scss";

.settings-dialog-container {
    @include flexboxLayout(column, flex-start, flex-start);
    background-color: var(--dark-background-3);
    padding: 32px;
    width: 400px;

    .title-container {
        @include flexboxLayout(column, flex-start, flex-start);
        margin-bottom: 12px;
        width: 100%;
        
        .title-text {
            @include darkHeadingLText;
            margin-bottom: 24px;
            padding: 0;
        }

        .subtitle-text {
            @include darkBodyMText;
            padding: 0;
        }
   }

   .checkbox-container {
        @include flexboxLayout(column, flex-start, flex-start);
        margin-bottom: 24px;
        width: 100%;
    }

    .reset-buttons {
        @include flexboxLayout(row, space-around, center);
        flex-wrap: wrap;
        width: 100%;
        margin-bottom: 24px;

        .all-none-button {
            @include mainButtonStyles(var(--primary-idle), var(--text-color-for-dark-background-1), 20px);
            font-size: 12px;
            width: 40%;
        }

        .reset-initial-button {
            @include mainButtonStyles(var(--primary-hover), var(--light-subtitle-text-1), 20px);
            font-size: 12px;
            width: 40%;
        }

    }

   .action-buttons {
        @include flexboxLayout(row, space-between, center);
        width: 100%;

        &:not(:last-child) {
            margin-bottom: 24px;
        }

        button {
            width: 50%;
        }

        
        .cancel-button {
            @include mainButtonStyles(var(--secondary-idle), var(--text-color-for-light-background-1), 40px);
        }
        
        .save-button {
            @include mainButtonStyles(var(--primary-idle), var(--text-color-for-dark-background-1), 40px);
        }
    }
}


// This is the element being dragged
.cdk-drag {
    @include flexboxLayout(row, flex-start, center);
    background-color: var(--ang-exp-grey-4);
    color: var(--ang-exp-white-1);
    margin: 4px 0;
    width: 100%;
    
    mat-icon {
        cursor: move;
    }

    &-content {
        @include flexboxLayout(column, flex-start, flex-start);
    }
    
    .element-title {
        @include darkBodyMText;
    }

    p {
        margin: 0;
        padding: 0;
    }
}

// This is the preview of the element being dragged
.cdk-drag-preview {
    @include flexboxLayout(row, flex-start, flex-start);
    color: var(--ang-exp-white-1);
    background-color: var(--ang-exp-grey-4);
    width: 100%;
    min-height: 60px;
    margin: 4px 0;
    box-sizing: border-box;
    border-radius: 4px;
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
                0 8px 10px 1px rgba(0, 0, 0, 0.14),
                0 3px 14px 2px rgba(0, 0, 0, 0.12);

    .element-title {
        @include darkBodyMText;
    }

    p {
        margin: 0;
        padding: 0;
    }
}

// This affects the preview after releasing the mouse button to allow the drop
.cdk-drag-animating {
    background-color: red;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// These are all the elements not being dragged
.cdk-drop-list-dragging .cdk-drag:not(.cdk-drag-placeholder) {
    background-color: blue;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// This affects the location the element was dragged from, after the element is 
// clicked on and the drag is in progress
.placeholder {
    background-color: var(--ang-exp-grey-4);
    border: dotted 2px #999;
    min-height: 60px;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
    width: 100%;
}
