@use '../styles/global-mixins' as global;
@use '../styles/global-variables' as globalVar;
@use './css-tricks-mixins' as cssTricks;
@import "styles.scss";

:host {
    .mat-mdc-tab-group {
        height: 100%;
        
        ::ng-deep {
            .mat-mdc-tab-body-wrapper {
                height: 100%;
            }
        }
    }

///////////////////// SOLID HEXAGONS //////////////////////
    .hex-solid-container {
        @include cssTricks.hexContainer;
        
        .hexagon-solid {
            @include cssTricks.hexagonSolid;
            @include cssTricks.hoverColor;
            @include cssTricks.animation4SLinearInfinite;
        }
    }

        ///////////////////// OUTLINED HEXAGONS //////////////////////
    .hex-outlined-container {
        @include cssTricks.hexContainer;

        .hexagon-outlined {
            @include cssTricks.hexagonOutlined;
            @include cssTricks.hoverColor;
            @include cssTricks.animation4SLinearInfinite;
        }
    }

    ///////////////////// HEXAGONS WITH FLOATING CURSOR CIRCLE BLUR ///////////////
    .hex-cursor-container {
        @include cssTricks.hexContainer;
        
        .hexagon-cursor {
            @include cssTricks.hexagonSolid;
            z-index: 10;
        }

        #cursor {
            @include cssTricks.animation4SLinearInfiniteBlur(50px);
            @include cssTricks.backgroundCircle;
        }
    }

    .glowing-stuff-container {
        @include global.flexboxLayout(column, center, center);
        background: #0e1538;
        height: 100%;
        width: 100%;
        
        .elements-container {
            @include global.flexboxLayout(row, space-evenly, center);
            padding: 40px;
            width: 100%;
            
            .neon-button {
                @include cssTricks.neonButton;
            }
        }
    
        .glowing-corners-container {
            @include global.flexboxLayout(row, center, center);
    
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            background: #0e1538;
            height: 100%;
            gap: 200px;
            width: 100%;
            
            .box {
                @include cssTricks.glowingCornersBox;
                height: 200px;
                width: 150px;
                
                &:nth-child(2) {
                    background: linear-gradient(45deg, #ffeb3b, #0e1538, #0e1538, #00ffaa);
                }
                
                &:nth-child(2):after {
                    background: linear-gradient(45deg, #ffeb3b, #0e1538, #0e1538, #00ffaa);
                }
    
            }
        }

    }


}    

// DO NOT DELETE
// creates a hexagon but with verbose before/after pseudo elements.
// keeping for reference but will be using the clip-path version above
.hexagon-before-after {
    background-color: black;
    height: 100px;
    position: relative;
    width: 60px;

    &:before {
        content: '';
        position: absolute;
        top: 0;
        left: -30px;
        width: 0;
        height: 0;
        border-right: 30px solid black;
        border-top: 50px solid transparent;
        border-bottom: 50px solid transparent;
    }

    &:after {
        content: '';
        position: absolute;
        top: 0;
        right: -30px;
        width: 0;
        height: 0;
        border-left: 30px solid black;
        border-top: 50px solid transparent;
        border-bottom: 50px solid transparent;
    }

}
/////////////////////////
    

