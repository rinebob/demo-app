@use '../styles/global-mixins' as global;
@use '../styles/global-variables' as globalVar;

@mixin hexContainer {
    box-sizing: border-box;
    margin: 0;
    padding: 0;

    // container
	min-height: calc(100vh - 145px);    // 145 = nav height + tab bar height
    background-color: #000;
    position: relative;
	overflow: hidden;

    .row {
        display: inline-flex;

        
        margin-top: -19px;
        margin-left: -25px;

        &:nth-child(even) {
            margin-left: 1px;
        }
    }
}

@mixin hexagonSolid {
    background-color: #111;
    position: relative;
    margin: 1px;
    height: 55px;
    width: 50px;

    // flat side top/bottom - this doesn't look evenly distrib'd.  taller than wide
    // clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);

    // flat side left/right - looks height width ~equal
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);

    transition: 2s;

    &:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 50%;
        height: 100%;
        pointer-events: none;
        background: rgba(255, 255, 255, 0.02);
        z-index: 10;
    }
}

@mixin hexagonOutlined {
    @include hexagonSolid;
    margin: 1px;

    // This puts a mask on the solid hexagon so it looks outlined
    &:after {
        content: '';
        position: absolute;
        top: 2px;
        bottom: 2px;
        left: 2px;
        right: 2px;

        background: #111;
        clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
        z-index: 1;
    }

}

@mixin hoverColor($color: #0f0) {
    &:hover {
        transition: 0s;
        background-color: $color;
    }
}

@mixin animation4SLinearInfinite {
    animation: animate 4s linear infinite;      // infinite makes it continuous

    // rotates through the color hues to make hex color change in 4s cycles
    @keyframes animate {
        0% {
            filter: hue-rotate(0deg);
        }
        100% {
            filter: hue-rotate(360deg);
        }
    }
}

@mixin animation4SLinearInfiniteBlur($blur: 0) {
    animation: blur 4s linear infinite;
    @keyframes blur {
        0% {
            filter: hue-rotate(0deg) blur($blur);
        }
        100% {
            filter: hue-rotate(360deg) blur($blur);
        }
    }
}

@mixin backgroundCircle {
    background: #0f0;
        position: absolute;
        height: 400px;
        width: 400px;
        top: 0;
        left: 0;
        border-radius: 50%;
        transform: translate(-50%, -50%);
        z-index: 1;
}

@mixin glowingCornersBox {
    position: relative;
    background: linear-gradient(45deg, #00ccff, #0e1538, #0e1538, #d400d4);
    box-shadow: 0 0 0 20px #070c23;

    &::before {
        content: '';
        position: absolute;
        inset: 2px;
        background: #0e1538;
        z-index: 2;
    }
    
    &::after {
        content: '';
        position: absolute;
        inset: 2px;
        background: linear-gradient(45deg, #00ccff, #0e1538, #0e1538, #d400d4);
        filter: blur(20px);
    }
}

@mixin neonButton {
    display: inline-block;
    overflow: hidden;
    position: relative;
    
    // configurable
    color: #2196f3;
    font-size: 24px;
    padding: 15px 30px;
    letter-spacing: 4px;
    text-decoration: none;
    text-transform: uppercase;
    transition: 0.2s;

    span {
        position: absolute;
        display: block;
            
        &:nth-child(1) {
            top: 0;
            left: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, transparent, #2196f3);
        }

        &:nth-child(2) {
            top: -100%;
            right: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(180deg, transparent, #2196f3);
        }

        &:nth-child(3) {
            bottom: 0;
            right: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(270deg, transparent, #2196f3);
        }
        
        &:nth-child(4) {
            bottom: -100%;
            left: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(360deg, transparent, #2196f3);
        }
    }

    &:hover {
        color: #255784;
        background-color: #2196f3;
        box-shadow: 0 0 10px #2196f3,
                    0 0 40px #2196f3,
                    0 0 80px #2196f3;
        transition-delay: 1s;

        span {
                
            &:nth-child(1) {
                left: 100%;
                transition: 1s;
            }

            &:nth-child(2) {
                top: 100%;
                transition: 1s;
                transition-delay: 0.25s;
            }

            &:nth-child(3) {
                right: 100%;
                transition: 1s;
                transition-delay: 0.5s;
            }

            &:nth-child(4) {
                bottom: 100%;
                transition: 1s;
                transition-delay: 0.75s;
            }
        }
    }
}

@mixin glowingPyramid {
    width: 300px;
                    height: 300px;
                    transform-style: preserve-3d;

                    animation: rotatePyramid 8s linear infinite;

                    @keyframes rotatePyramid {
                        0% {
                            transform: rotateX(-30deg) rotateY(0deg)
                        }
                        100% {
                            transform: rotateX(-30deg) rotateY(360deg)
                        }
                        
                    }

                    & .glow {
                        position: absolute;
                        top: 0;
                        left: 0;
                        width: 100%;
                        height: 100%;
                        background-color: #00ce00;
                        transform: rotateX(90deg) translateZ(-200px);
                        filter: blur(20px);
                        box-shadow: 0 0 120px rgba(0, 255, 0, 0.2),
                                    0 0 200px rgba(0, 255, 0, 0.4),
                                    0 0 300px rgba(0, 255, 0, 0.6),
                                    0 0 400px rgba(0, 255, 0, 0.8),
                                    0 0 500px rgba(0, 255, 0, 1.0);
                    }
    
                    & div {
                        position: absolute;
                        top: 0;
                        left: 0;
                        height: 100%;
                        width: 100%;
                        transform-style: preserve-3d;
                        
                        & span {
                            position: absolute;
                            top: 0;
                            left: 0;
                            width: 100%;
                            height: 100%;
                            background: linear-gradient(#151515, #00ed00);
                            clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
                            transform: rotateY(calc(90deg * var(--i))) translateZ(150px) rotateX(30deg);
                            transform-origin: bottom;
                        }
                    }
}

///////////////////////////// LOGIN REG FORM /////////////////////////

// css trick login-reg-form
@mixin boxShadowRaisedUpperLeftLowerRight {
    box-shadow: -5px -5px 15px rgba(255, 255, 255, 0.1),
                5px 5px 15px rgba(0,0,0, 0.35),
                inset -5px -5px 15px rgba(255, 255, 255, 0.1),
                inset 5px 5px 15px rgba(0,0,0, 0.35);
}

@mixin placeholderText {
    color: rgba(255, 255, 255, 0.5);
    font-size: 1em;
    font-weight: 300;
    letter-spacing: 0.05em;
    padding: 12px 10px 12px 60px;
    pointer-events: none;
    transition: 0.5s;
}

@mixin placeholderFocusStyles {
    position: absolute;
    left: 40px;
    top: -10px;
    background-color: #223243;
    border: 1px solid #00dfc4;
    border-radius: 10px;
    color: #00dfc4;
    font-size: 0.8em;
    letter-spacing: 0.1px;
    padding: 0 8px;
}

// css trick login-reg-form
@mixin spiffyInputStyles {
    
}

// css trick login-reg-form
@mixin spiffyButtonStyles {
    @include global.flexboxLayout(row, center, center);
    @include boxShadowRaisedUpperLeftLowerRight;
    background: #00dfc4;
    border: none;
    border-radius: 25px;
    color: #223243;
    cursor: pointer;
    font-family: inherit;
    font-weight: 500;
    padding: 10px 0;
    width: 100%;

    .button-text {
        align-self: center;
        font-size: 1em;
        transition: 0.5s;
    }
}

@mixin border8pxSolid($color: black) {
    border: 8px solid $color;
}